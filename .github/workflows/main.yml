# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          
      - name: npm install
        run: npm install
        working-directory: ./src/Ml.Cli.WebApp/ClientApp
        
      - name: npm test
        run: npm test -- --runInBand --coverage --watchAll=false
        working-directory: ./src/Ml.Cli.WebApp/ClientApp
      
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel
      #- run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./coverage/opencover.xml
      
      - run: dotnet publish ./src/Ml.Cli.WebApp/Ml.Cli.WebApp.csproj --self-contained true --output ./ubuntu/ml-cli-webapp -f netcoreapp3.1 -c Release -r linux-x64 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:PublishReadyToRun=true
      
      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip output
        run: zip -qq -r ml-cli-webapp.zip ml-cli-webapp
        working-directory: ./ubuntu/
      
      - name: version
        run: echo "::set-output name=version::1.0.1"
        id: version
        
      - name: Upload WebApp1 Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Publish Unbuntu ml-cli-webapp
          path: ./ubuntu/ml-cli-webapp
      
      - name: release
        uses: actions/create-release@v1
        #if: ${{ github.ref == 'refs/heads/main' }}
        id: create_release
        with:
          draft: false
          prerelease: true
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
          
      - name: upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ubuntu/ml-cli-webapp.zip
          asset_name: ml-cli-webapp.zip
          asset_content_type: application/zip
