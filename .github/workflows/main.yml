name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  tags:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.tag.outputs.new_version }}
    steps:
      - uses: actions/checkout@master
      - name: Bump version and push tag
        id: tag_version
    #    if: github.ref == 'refs/heads/master'
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN  }}
      - name: Add tag to output step
        id: tag
     #   if: github.ref == 'refs/heads/master'
        run: echo "::set-output name=new_version::${{ steps.tag_version.outputs.new_version }}"
  build:
    environment: ml-cli
    runs-on: ubuntu-latest
    needs: tags
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: npm install
        run: npm install
        working-directory: ./src/Ml.Cli.WebApp/ClientApp

      - name: npm test
        run: npm test -- --runInBand --coverage --watchAll=false
        working-directory: ./src/Ml.Cli.WebApp/ClientApp
        
      - name: npm run build-storybook
        run: npm run build-storybook
        working-directory: ./src/Ml.Cli.WebApp/ClientApp

      - uses: actions/setup-dotnet@v1
  #${{ needs.tags.outputs.new_version }}
      #- run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=./coverage/opencover.xml

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=axaguildev
            -Dsonar.projectKey=AxaGuilDEv_ml-cli
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.exclusions=**/*.spec.js,**/*.stories.js,**/ClientApp/src/Toolkit/**,**/ClientApp/coverage/**,Scripts/**,**/*.scss,**/__snapshots__/**,**/*[Tt]ests.cs,**/node_modules/**,**/ClientApp/build/**,**/ClientApp/.storybook/**,**/ClientApp/storybook-static/**,**/obj/**,**/__mocks__/**,**/ClientApp/src/serviceWorker.ts
            -Dsonar.javascript.lcov.reportPaths=ClientApp/coverage/lcov.info
            -Dsonar.cs.opencover.reportsPaths=**/opencover.xml

      - run: dotnet publish ./src/Ml.Cli.WebApp/Ml.Cli.WebApp.csproj -c Release -r linux-x64 --self-contained=true /p:PublishSingleFile=true /p:PublishTrimmed=true /p:PublishReadyToRun=true --output ./ubuntu/ml-cli-webapp 

      - name: Zip Release
        uses: TheDoctor0/zip-release@0.6.0
        with:
          filename: linux-x64-ml-cli-webapp.zip
          path: ./ml-cli-webapp
          directory: ./ubuntu
        
      - name: Upload linux-x64-ml-cli-webapp Build Artifact
        uses: actions/upload-artifact@v2
        with:
            name: linux-x64-ml-cli-webapp
            path: ./ubuntu/ml-cli-webapp

      - name: release
        uses: actions/create-release@v1
        #if: ${{ github.ref == 'refs/heads/master' }}
        id: create_release
        with:
          draft: false
          prerelease: true
          release_name: ${{ needs.tags.outputs.new_version }}
          tag_name: "v${{ needs.tags.outputs.new_version }}"
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ubuntu/linux-x64-ml-cli-webapp.zip
          asset_name: linux-x64-ml-cli-webapp.zip
          asset_content_type: application/zip